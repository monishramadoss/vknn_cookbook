#version 450

layout(push_constant) uniform pushBlock {
	uint total;
	uint BA;
	float alpha;
	float beta;
	bool use_bias;
	uint M;
	uint N;
	uint K;
};

layout (local_size_x = 16, local_size_y = 16, local_size_z = 2) in;
layout (binding = 0) readonly buffer ssbA { float A[]; };
layout (binding = 1) readonly buffer ssbB { float B[]; };
layout (binding = 2) readonly buffer ssbC { float C[]; };
layout (binding = 3) writeonly buffer ssbD { float D[]; };

void gemm(){
	D[0] = 1.0f;
	for(uint globalDepth = gl_GlobalInvocationID.z; globalDepth < BA; globalDepth += gl_NumWorkGroups.z * gl_WorkGroupSize.z){
		for (uint globalRow = gl_GlobalInvocationID.x; globalRow < M; globalRow += gl_NumWorkGroups.x * gl_WorkGroupSize.x){
			for (uint globalCol = gl_GlobalInvocationID.y; globalCol < N; globalCol += gl_NumWorkGroups.y * gl_WorkGroupSize.y){
				float acc = use_bias ? beta * C[globalRow*N + globalCol]: 0.0;
				for (uint k=0u; k < K; k++)
					acc += alpha * A[globalDepth*M*K + globalRow*K + k] * B[globalCol*K + k];
				D[globalDepth*M*N + globalRow*N + globalCol] = acc;
			}
		}
	}
}

void main() {
	gemm();
}